{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Strong Concrete",
    "description": "Stock mananegment API Service",
    "termsOfService": "https://github.com/Tech-Sync",
    "contact": {
      "name": "Tech-Sync",
      "url": "https://github.com/Tech-Sync",
      "email": "alidrl26@gmail.com"
    },
    "license": {
      "name": "BSD Licence"
    }
  },
  "host": "strong-concrete.onrender.com",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Entry Your AccessToken (JWT) for Login. Example: <b>Bearer <i>...accessToken...<i></b>"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User Login",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>The Email should be a verified, otherwise user can not login.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "test@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "aA123456.?"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/verify-email": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify Email",
        "description": "\r  <b>-</b> When user verify email address, He/She will be directed email verify UI page with emailToken in query. <br>\r  <b>-</b> Catch the emailToken and send in query by call this API.",
        "parameters": [
          {
            "name": "emailToken",
            "in": "query",
            "type": "string",
            "schema": {
              "type": "string",
              "example": "--emailToken--"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User Register",
        "description": "\r  <b>-</b> Only admin can register a user from admin panel. <br>\r  <b>-</b> Once register successful, an email will be sent to user email address.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>The Email should be a valid email, otherwise can not do any function.</li>   <li>Password should includes least capital and lower case, number, special char, and min 8 lenght.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "test"
                },
                "lastName": {
                  "type": "string",
                  "example": "test"
                },
                "nrcNo": {
                  "type": "string",
                  "example": "11111111"
                },
                "phoneNo": {
                  "type": "string",
                  "example": "+26011111"
                },
                "address": {
                  "type": "string",
                  "example": "ibex"
                },
                "role": {
                  "type": "number",
                  "example": 4
                },
                "email": {
                  "type": "string",
                  "example": "test@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "aA123456.?"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "JWT Refresh Token",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refresh": {
                  "type": "string",
                  "example": "---refresh token----"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "User Logout",
        "description": "<b>-</b> No need any doing for logout. You must use SignOut from next-auth.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List All Users",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Read User With Id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update User With Id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the object includes attributes that should be  .</li>   <li>Password can not be updated with this API.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "string"
                },
                "lastName": {
                  "type": "string",
                  "example": "string"
                },
                "nrcNo": {
                  "type": "string",
                  "example": "string"
                },
                "phoneNo": {
                  "type": "string",
                  "example": "number"
                },
                "address": {
                  "type": "string",
                  "example": "string"
                },
                "role": {
                  "type": "string",
                  "example": "number"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete User With Id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/update-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update User Password",
        "description": "\r  <b>-</b> User should be logged in already.<br>\r  <b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "aA12345."
                },
                "newPassword": {
                  "type": "string",
                  "example": "54321aA?"
                },
                "reNewPassword": {
                  "type": "string",
                  "example": "54321aA?"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/update-email": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update User email",
        "description": "\r  <b>-</b> User should be logged in already.<br>\r  <b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "currentEmail": {
                  "type": "string",
                  "example": "user@gmail.com"
                },
                "newEmail": {
                  "type": "string",
                  "example": "user2@gmail.com"
                },
                "reNewEmail": {
                  "type": "string",
                  "example": "user2@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/restore/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Restore Deleted User With Id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/forget-password": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Forget Password",
        "description": "\r  <b>-</b> Send user email in body. <br>\r  <b>-</b> Once user click reset password in the email, he/she will be redirected reset password UI page. <br>\r  <b>-</b> Catch <b>uid</b> and <b>emailToken</b> queries to use when reset password API called.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "alidrl26@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/reset-password/{uid}/{emailToken}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Reset Password",
        "description": "\r  <b>-</b> Send user password in body. <br>\r  <b>-</b> Send as a paramas <b>uid</b> and <b>emailToken</b> values.",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "emailToken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "example": "any"
                },
                "password2": {
                  "type": "string",
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/multiple-delete": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Multiple-Delete Users With Id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the users you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/firms/": {
      "get": {
        "tags": [
          "Firm"
        ],
        "summary": "List All Firms",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Firm"
        ],
        "summary": "Firm: Create",
        "description": "Create with name, address, phoneNo, tpinNo, email and status",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "address": {
                  "type": "string",
                  "example": "string"
                },
                "phoneNo": {
                  "type": "string",
                  "example": "string"
                },
                "tpinNo": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "status": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/firms/{id}": {
      "get": {
        "tags": [
          "Firm"
        ],
        "summary": "Read Firm With Id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Firm"
        ],
        "summary": "Update Firm With Id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the object includes attributes that should be  .</li>   <li>You can update : name, address, phoneNo, tpinNo, email and status .</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "address": {
                  "type": "string",
                  "example": "string"
                },
                "phoneNo": {
                  "type": "string",
                  "example": "string"
                },
                "tpinNo": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "status": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Firm"
        ],
        "summary": "Delete Firm With Id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/firms/restore/{id}": {
      "get": {
        "tags": [
          "Firm"
        ],
        "summary": "Restore Deleted Firm With Id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/firms/multiple-delete": {
      "post": {
        "tags": [
          "Firm"
        ],
        "summary": "Multiple-Delete Firms With Id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the firms you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List All Products",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Product: Create",
        "description": "Create with name, price and materials(previously created)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Written materials must be written in capital letters.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "price": {
                  "type": "string",
                  "example": "number"
                },
                "materials": {
                  "type": "object",
                  "properties": {
                    "STONE": {
                      "type": "string",
                      "example": "number"
                    },
                    "SAND": {
                      "type": "string",
                      "example": "number"
                    },
                    "CEMENT": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Read product with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update product with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the object includes attributes that should be  .</li>   <li>You can update : name, price and materials .</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "price": {
                  "type": "string",
                  "example": "number"
                },
                "materials": {
                  "type": "object",
                  "properties": {
                    "STONE": {
                      "type": "string",
                      "example": "number"
                    },
                    "SAND": {
                      "type": "string",
                      "example": "number"
                    },
                    "CEMENT": {
                      "type": "string",
                      "example": "number"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete product with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/restore/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Restore deleted product with ID",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/products/multiple-delete": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Multiple-Delete Product with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the products you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/materials/": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "List All Materials",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Material"
        ],
        "summary": "Material: Create",
        "description": "Create With name and unitType (ton or kilo)",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>unitType must be ton or kilo</li>   <li>When writing the value of unitType and name, it does not matter whether it is lowercase or uppercase.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "unitType": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/materials/{id}": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Read Material With Id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Material"
        ],
        "summary": "Update Material With Id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "unitType": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Material"
        ],
        "summary": "Delete Material With Id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/materials/restore/{id}": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Restore Deleted Material With Id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/materials/multiple-delete": {
      "post": {
        "tags": [
          "Material"
        ],
        "summary": "Multiple-Delete Materials With Id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the materials you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/purchases/": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": " Purchase List",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "Purchase: Create",
        "description": "\r  <b>-</b> To create an example from the Purchase table, you need the following information: MaterialId, quantity, FirmId and unitPrice. <br>\r  <b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "MaterialId": {
                  "type": "string",
                  "example": "number"
                },
                "quantity": {
                  "type": "string",
                  "example": "number"
                },
                "unitPrice": {
                  "type": "string",
                  "example": "number"
                },
                "FirmId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/purchases/{id}": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "Read purchase with id",
        "description": "\r  <b>-</b> Send access token in header. ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Purchase"
        ],
        "summary": "Update purchase with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the object includes attributes that should be  .</li>   <li>You can update : MaterialId, quantity, FirmId and unitPrice .</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "MaterialId": {
                  "type": "string",
                  "example": "number"
                },
                "quantity": {
                  "type": "string",
                  "example": "number"
                },
                "unitPrice": {
                  "type": "string",
                  "example": "number"
                },
                "FirmId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Purchase"
        ],
        "summary": "Delete purchase with id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/purchases/restore/{id}": {
      "get": {
        "tags": [
          "Purchase"
        ],
        "summary": "Restore deleted purchase with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/purchases/multiple-delete": {
      "post": {
        "tags": [
          "Purchase"
        ],
        "summary": "Multiple-Delete Purchase with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the purchases you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/purchase_accounts/": {
      "get": {
        "tags": [
          "PurchaseAccount"
        ],
        "summary": " PurchaseAccount List",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "PurchaseAccount"
        ],
        "summary": "PurchaseAccount: Create",
        "description": "\r  <b>-</b> PurchaseAccount will be   automatically when the purchase is made. <br>\r  <b>-</b> There is no need to create a PurchaseAccount manually. <br>\r  <b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FirmId": {
                  "type": "string",
                  "example": "number"
                },
                "credit": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": true
      }
    },
    "/purchase_accounts/{id}": {
      "get": {
        "tags": [
          "PurchaseAccount"
        ],
        "summary": "Read PurchaseAccount with id",
        "description": "\r  <b>-</b> Send access token in header. ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "PurchaseAccount"
        ],
        "summary": "Update PurchaseAccount with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the object includes attributes that should be updated.</li>      </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FirmId": {
                  "type": "string",
                  "example": "number"
                },
                "credit": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "PurchaseAccount"
        ],
        "summary": "Delete PurchaseAccount with id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/purchase_accounts/restore/{id}": {
      "get": {
        "tags": [
          "PurchaseAccount"
        ],
        "summary": "Restore PurchaseAccount with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/purchase_accounts/multiple-delete": {
      "post": {
        "tags": [
          "PurchaseAccount"
        ],
        "summary": "Multiple-Delete Firm with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the purchaseAccounts you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/vehicles/": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "List All Vehicles",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Vehicle: Create",
        "description": "Create with DriverID, plateNumber, model and capacity",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DriverId": {
                  "type": "string",
                  "example": "number"
                },
                "plateNumber": {
                  "type": "string",
                  "example": "string"
                },
                "model": {
                  "type": "string",
                  "example": "number"
                },
                "capacity": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/vehicles/{id}": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Read Vehicle with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Update vehicle with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the object includes attributes that should be  .</li>   <li>You can update: DriverId, plateNumber, capacity and model .</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "DriverId": {
                  "type": "string",
                  "example": "number"
                },
                "plateNumber": {
                  "type": "string",
                  "example": "string"
                },
                "model": {
                  "type": "string",
                  "example": "number"
                },
                "capacity": {
                  "type": "string",
                  "example": "number"
                },
                "status": {
                  "type": "string",
                  "example": "number"
                },
                "isPublic": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Delete vehicle with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/vehicles/restore/{id}": {
      "get": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Restore deleted vehicle with ID",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/vehicles/multiple-delete": {
      "post": {
        "tags": [
          "Vehicle"
        ],
        "summary": "Multiple-Delete Vehicle with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the vehicles you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sales/": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": " Sale List",
        "description": "\r  You can send query with endpoint for search[], sort[], page and limit.<br><br>\r  For date filtering you can filter with preDefiend keywords or picking custom range;<br>\r  -- for the preDefiend query values are [today, nextWeek, lastWeek, thisWeek]. <br>\r  -- for custom range needed queries are startDate, endDate and dateField.\r  <ul> Examples:\r  <li>endpoint?<b>preDefined=today&dateField=requestedDate</b></li>\r  <li>endpoint?<b>preDefined=lastWeek&dateField=orderDate</b></li>\r  <li>endpoint?startDate=2023-01-01&endDate=2023-01-07&dateField=requestedDate</b></li>\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          },
          {
            "name": "showQuote",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show quotetions as well (orderDate is Null), default value is false"
          },
          {
            "name": "preDefiend",
            "in": "query",
            "type": "string",
            "description": "exp: [today, nextWeek, lastWeek, thisWeek]"
          },
          {
            "name": "startDate",
            "in": "query",
            "type": "string",
            "description": "Format is YEAR-MONTH-DAY"
          },
          {
            "name": "endDate",
            "in": "query",
            "type": "string",
            "description": "Format is YEAR-MONTH-DAY"
          },
          {
            "name": "dateField",
            "in": "query",
            "type": "string",
            "description": "exp:[requestedDate, orderDate, createdAt, updatedAt]"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Sale"
        ],
        "summary": "Sale Create",
        "description": "\r  <b>-</b> Create with FirmId, ProductId, quantity, location, requestedDate and sideContact <br>\r  <b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Time format must be Year-Month-Day </li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FirmId": {
                  "type": "string",
                  "example": "number"
                },
                "ProductId": {
                  "type": "string",
                  "example": "number"
                },
                "quantity": {
                  "type": "string",
                  "example": "number"
                },
                "location": {
                  "type": "string",
                  "example": "string"
                },
                "requestedDate": {
                  "type": "string",
                  "example": "string"
                },
                "sideContact": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/sales/w": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": " Sale List Weekly",
        "description": "For custom range needed queries are startDate and endDate.It is ranged for orderDate\r  <ul> Examples:\r  <li>endpoint?startDate=2023-01-01&endDate=2023-01-07</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "type": "string",
            "description": "Format is YEAR-MONTH-DAY"
          },
          {
            "name": "endDate",
            "in": "query",
            "type": "string",
            "description": "Format is YEAR-MONTH-DAY"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/sales/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Read sale with id",
        "description": "\r  <b>-</b> Send access token in header. ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Sale"
        ],
        "summary": "Update purchase with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Only admin can update status and orderDate.</li>   <li>When orderDate  , status also should  ./</li>   <li>sale account will be created when status of sale is approved./</li>   <li>Send the object includes attributes that should be  .</li>   <li>You can update : FirmId, ProductId, quantity, location, requestedDate, status, sideContact and orderDate.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FirmId": {
                  "type": "string",
                  "example": "number"
                },
                "ProductId": {
                  "type": "string",
                  "example": "number"
                },
                "quantity": {
                  "type": "string",
                  "example": "number"
                },
                "location": {
                  "type": "string",
                  "example": "string"
                },
                "requestedDate": {
                  "type": "string",
                  "example": "string"
                },
                "sideContact": {
                  "type": "string",
                  "example": "string"
                },
                "orderDate": {
                  "type": "string",
                  "example": "string"
                },
                "status": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "tags": [
          "Sale"
        ],
        "summary": "Delete sale with id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sales/restore/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Restore deleted sale with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/sales/update-order/{id}": {
      "post": {
        "tags": [
          "Sale"
        ],
        "summary": "Update sale order",
        "description": "\r  <b>-</b> Send ID number of the whose orderNumber you want to change as a param. <br>\r  <b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the newOrderNumber in the body. </li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newOrderNumber": {
                  "type": "string",
                  "example": "number"
                },
                "newOrderDate": {
                  "type": "string",
                  "example": "YYYY-MM-DD"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/sales/multiple-delete": {
      "post": {
        "tags": [
          "Sale"
        ],
        "summary": "Multiple-Delete Sale with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the sales you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sale_accounts/": {
      "get": {
        "tags": [
          "Sale Account"
        ],
        "summary": " Sale Account List",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Sale Account"
        ],
        "summary": "Sale Account: Create",
        "description": "\r  <b>-</b> SaleAccount will be created automatically after the sale is made. <br>\r  <b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": true
      }
    },
    "/sale_accounts/{id}": {
      "get": {
        "tags": [
          "Sale Account"
        ],
        "summary": "Read Sale Account with id",
        "description": "\r  <b>-</b> Send access token in header. ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Sale Account"
        ],
        "summary": "Update Sale Account with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the object includes attributes that should be updated.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "FirmId": {
                  "type": "string",
                  "example": "number"
                },
                "paid": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Sale Account"
        ],
        "summary": "Delete Sale Account with id",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sale_accounts/restore/{id}": {
      "get": {
        "tags": [
          "Sale Account"
        ],
        "summary": "Restore deleted Sale Account with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/sale_accounts/multiple-delete": {
      "post": {
        "tags": [
          "Sale Account"
        ],
        "summary": "Multiple-Delete SaleAccount with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the SaleAccounts you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/productions/": {
      "get": {
        "tags": [
          "Production"
        ],
        "summary": "List All Productions",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Production"
        ],
        "description": "\r  <b>-</b> Production is   automatically after sale status change to APPROVED. <br>\r  <b>-</b> No need to create production manuel.\r  <b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>SaleId should be gotten from sale table</li>   <li>VehicleIds is an array contains integer, and should be gotten from vehicle table</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "SaleId": {
                  "type": "string",
                  "example": "number"
                },
                "VehicleIds": {
                  "type": "string",
                  "example": "array with number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": true
      }
    },
    "/productions/{id}": {
      "get": {
        "tags": [
          "Production"
        ],
        "summary": "Read production with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Production"
        ],
        "summary": "Update production with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the object includes attributes that should be updated.</li>   <li>Status is integer value.</li>   <li>VehicleIds is an array contains integer, and should be gotten from vehicle table</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "number"
                },
                "VehicleIds": {
                  "type": "string",
                  "example": "array with numbers"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Production"
        ],
        "summary": "Delete production with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/productions/restore/{id}": {
      "get": {
        "tags": [
          "Production"
        ],
        "summary": "Restore deleted production with ID",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/productions/multiple-delete": {
      "post": {
        "tags": [
          "Production"
        ],
        "summary": "Multiple-Delete Production with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the deliveries you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/deliveries/": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "List All Deliveries",
        "description": "You can send query with endpoint for search[], sort[], page and limit.\r  <ul> Examples:\r  <li>URL/?<b>search[field1]=value1&search[field2]=value2</b></li>\r  <li>URL/?<b>sort[field1]=1&sort[field2]=-1</b></li>\r  <li>URL/?<b>page=2&limit=1</b></li>\r  </ul>\r  ",
        "parameters": [
          {
            "name": "showDeleted",
            "in": "query",
            "type": "boolean",
            "description": "Send true to show deleted data as well, default value is false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Delivery"
        ],
        "description": "\r  <b>-</b> Delivery is   automatically after production status change to BEING PRODUCED. <br>\r  <b>-</b> No need to create delivery manuel.\r  <b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>ProductionId is an integer and should be gotten from production table</li>   <li>VehicleId is an integer and should be gotten from vehicle table</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ProductionId": {
                  "type": "string",
                  "example": "number"
                },
                "VehicleId": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": true
      }
    },
    "/deliveries/{id}": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "Read Delivery with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Delivery"
        ],
        "summary": "Update delivery with id",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>Send the object includes attributes that should be  .</li>   <li>Status is integer value.</li>   <li>VehicleId is not able to be updated by driver from this stage.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "Delivery"
        ],
        "summary": "Delete delivery with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hardDelete",
            "in": "query",
            "type": "boolean",
            "description": "Send true for hard deletion, default value is false which is soft delete."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/deliveries/restore/{id}": {
      "get": {
        "tags": [
          "Delivery"
        ],
        "summary": "Restore deleted delivery with ID",
        "description": "<b>-</b> Send access token in header.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/deliveries/multiple-delete": {
      "post": {
        "tags": [
          "Delivery"
        ],
        "summary": "Multiple-Delete delivery with ID",
        "description": "\r  <b>-</b> Send access token in header. <br>\r  <b>-</b> This returns data includes remaning items.\r  ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "   <ul>    <li>You must write the IDs of the deliveries you want to delete into the array.</li>   </ul> ",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {},
    "Material": {},
    "Firm": {},
    "Purchase": {},
    "PurchaseAccount": {},
    "Sale": {},
    "Production": {},
    "Product": {},
    "Vehicle": {},
    "Delivery": {},
    "SaleAccount": {}
  },
  "security": [
    {
      "JWT": true
    }
  ]
}